{
  "{\"sourceRoot\":\"C:\\\\Users\\\\57315\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Nueva_Api\\\\NewApi\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\57315\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Nueva_Api\\\\NewApi\",\"filename\":\"C:\\\\Users\\\\57315\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Nueva_Api\\\\NewApi\\\\src\\\\gateway.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\57315\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Nueva_Api\\\\NewApi\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\57315\\OneDrive\\Documentos\\GitHub\\Nueva_Api\\NewApi\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\57315\\OneDrive\\Documentos\\GitHub\\Nueva_Api\\NewApi",
      "filename": "C:\\Users\\57315\\OneDrive\\Documentos\\GitHub\\Nueva_Api\\NewApi\\src\\gateway.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\57315\\OneDrive\\Documentos\\GitHub\\Nueva_Api\\NewApi",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\57315\\OneDrive\\Documentos\\GitHub\\Nueva_Api\\NewApi\\src\\gateway.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\57315\\OneDrive\\Documentos\\GitHub\\Nueva_Api\\NewApi\\src\\gateway.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\57315\\OneDrive\\Documentos\\GitHub\\Nueva_Api\\NewApi\\src\\",
        "sourceFileName": "gateway.js"
      }
    },
    "ast": null,
    "code": "const {\n  ApolloGateway\n} = require('@apollo/gateway');\n\nconst {\n  ApolloServer\n} = require('apollo-server-express');\n\nconst express = require('express');\n\nconst dotenv = require('dotenv');\n\nconst fs = require('fs');\n\nconst https = require('https');\n\ndotenv.config();\nconst uri = process.env.URI;\nconst config = {\n  ssl: true,\n  port: 5000,\n  hostname: \"localhost\"\n};\nconst gateway = new ApolloGateway({\n  serviceList: [{\n    name: \"exams\",\n    url: `http://localhost:3000`\n  }],\n  //Aqui se agregan los microcervicios con puertos diferentes 5001, 5002, 5003... y se crea su respectiva carpeta en services\n  __exposeQueryPlanExperimental: true\n});\nconst apollo = new ApolloServer({\n  gateway,\n  engine: false,\n  playground: true,\n  subscriptions: false\n});\nconst app = express();\napollo.applyMiddleware({\n  app\n});\nlet server = https.createServer({\n  key: fs.readFileSync(`./localhost.key`),\n  cert: fs.readFileSync(`./localhost.crt`)\n}, app);\nserver.listen({\n  port: config.port\n}, () => console.log(\"ðŸš€ Server ready at\", `http${config.ssl ? \"s\" : \"\"}://${config.hostname}:${config.port}${apollo.graphqlPath}`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhdGV3YXkuanMiXSwibmFtZXMiOlsiQXBvbGxvR2F0ZXdheSIsInJlcXVpcmUiLCJBcG9sbG9TZXJ2ZXIiLCJleHByZXNzIiwiZG90ZW52IiwiZnMiLCJodHRwcyIsImNvbmZpZyIsInVyaSIsInByb2Nlc3MiLCJlbnYiLCJVUkkiLCJzc2wiLCJwb3J0IiwiaG9zdG5hbWUiLCJnYXRld2F5Iiwic2VydmljZUxpc3QiLCJuYW1lIiwidXJsIiwiX19leHBvc2VRdWVyeVBsYW5FeHBlcmltZW50YWwiLCJhcG9sbG8iLCJlbmdpbmUiLCJwbGF5Z3JvdW5kIiwic3Vic2NyaXB0aW9ucyIsImFwcCIsImFwcGx5TWlkZGxld2FyZSIsInNlcnZlciIsImNyZWF0ZVNlcnZlciIsImtleSIsInJlYWRGaWxlU3luYyIsImNlcnQiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwiZ3JhcGhxbFBhdGgiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFvQkMsT0FBTyxDQUFDLGlCQUFELENBQWpDOztBQUNBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUFtQkQsT0FBTyxDQUFDLHVCQUFELENBQWhDOztBQUNBLE1BQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNSSxFQUFFLEdBQUdKLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLE1BQU1LLEtBQUssR0FBR0wsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBRUFHLE1BQU0sQ0FBQ0csTUFBUDtBQUVBLE1BQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLEdBQXhCO0FBRUEsTUFBTUosTUFBTSxHQUFHO0FBQUVLLEVBQUFBLEdBQUcsRUFBRSxJQUFQO0FBQWFDLEVBQUFBLElBQUksRUFBRSxJQUFuQjtBQUF5QkMsRUFBQUEsUUFBUSxFQUFFO0FBQW5DLENBQWY7QUFFQSxNQUFNQyxPQUFPLEdBQUcsSUFBSWYsYUFBSixDQUFrQjtBQUM5QmdCLEVBQUFBLFdBQVcsRUFBRSxDQUNUO0FBQUVDLElBQUFBLElBQUksRUFBRSxPQUFSO0FBQWlCQyxJQUFBQSxHQUFHLEVBQUc7QUFBdkIsR0FEUyxDQURpQjtBQUczQjtBQUNIQyxFQUFBQSw2QkFBNkIsRUFBRTtBQUpELENBQWxCLENBQWhCO0FBUUEsTUFBTUMsTUFBTSxHQUFHLElBQUlsQixZQUFKLENBQWlCO0FBQzVCYSxFQUFBQSxPQUQ0QjtBQUU1Qk0sRUFBQUEsTUFBTSxFQUFFLEtBRm9CO0FBRzVCQyxFQUFBQSxVQUFVLEVBQUUsSUFIZ0I7QUFJNUJDLEVBQUFBLGFBQWEsRUFBRTtBQUphLENBQWpCLENBQWY7QUFPQSxNQUFNQyxHQUFHLEdBQUdyQixPQUFPLEVBQW5CO0FBQ0FpQixNQUFNLENBQUNLLGVBQVAsQ0FBdUI7QUFBRUQsRUFBQUE7QUFBRixDQUF2QjtBQUVBLElBQUlFLE1BQU0sR0FBSXBCLEtBQUssQ0FBQ3FCLFlBQU4sQ0FDVjtBQUNJQyxFQUFBQSxHQUFHLEVBQUV2QixFQUFFLENBQUN3QixZQUFILENBQWlCLGlCQUFqQixDQURUO0FBRUlDLEVBQUFBLElBQUksRUFBRXpCLEVBQUUsQ0FBQ3dCLFlBQUgsQ0FBaUIsaUJBQWpCO0FBRlYsQ0FEVSxFQUtWTCxHQUxVLENBQWQ7QUFRQUUsTUFBTSxDQUFDSyxNQUFQLENBQWM7QUFBRWxCLEVBQUFBLElBQUksRUFBRU4sTUFBTSxDQUFDTTtBQUFmLENBQWQsRUFBcUMsTUFDakNtQixPQUFPLENBQUNDLEdBQVIsQ0FDSSxvQkFESixFQUVLLE9BQU0xQixNQUFNLENBQUNLLEdBQVAsR0FBYSxHQUFiLEdBQW1CLEVBQUcsTUFBS0wsTUFBTSxDQUFDTyxRQUFTLElBQUdQLE1BQU0sQ0FBQ00sSUFBSyxHQUM3RE8sTUFBTSxDQUFDYyxXQUNWLEVBSkwsQ0FESiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXDU3MzE1XFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcR2l0SHViXFxOdWV2YV9BcGlcXE5ld0FwaVxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IEFwb2xsb0dhdGV3YXkgfSA9IHJlcXVpcmUoJ0BhcG9sbG8vZ2F0ZXdheScpO1xyXG5jb25zdCB7IEFwb2xsb1NlcnZlciB9ID0gcmVxdWlyZSgnYXBvbGxvLXNlcnZlci1leHByZXNzJyk7XHJcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJykgO1xyXG5jb25zdCBkb3RlbnYgPSByZXF1aXJlKCdkb3RlbnYnKTtcclxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xyXG5jb25zdCBodHRwcyA9IHJlcXVpcmUoJ2h0dHBzJyk7XHJcblxyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG5jb25zdCB1cmkgPSBwcm9jZXNzLmVudi5VUkk7XHJcblxyXG5jb25zdCBjb25maWcgPSB7IHNzbDogdHJ1ZSwgcG9ydDogNTAwMCwgaG9zdG5hbWU6IFwibG9jYWxob3N0XCIgfTtcclxuXHJcbmNvbnN0IGdhdGV3YXkgPSBuZXcgQXBvbGxvR2F0ZXdheSh7XHJcbiAgICBzZXJ2aWNlTGlzdDogW1xyXG4gICAgICAgIHsgbmFtZTogXCJleGFtc1wiLCB1cmw6IGBodHRwOi8vbG9jYWxob3N0OjMwMDBgIH0sXHJcbiAgICBdLCAvL0FxdWkgc2UgYWdyZWdhbiBsb3MgbWljcm9jZXJ2aWNpb3MgY29uIHB1ZXJ0b3MgZGlmZXJlbnRlcyA1MDAxLCA1MDAyLCA1MDAzLi4uIHkgc2UgY3JlYSBzdSByZXNwZWN0aXZhIGNhcnBldGEgZW4gc2VydmljZXNcclxuICAgIF9fZXhwb3NlUXVlcnlQbGFuRXhwZXJpbWVudGFsOiB0cnVlLFxyXG59KTtcclxuXHJcblxyXG5jb25zdCBhcG9sbG8gPSBuZXcgQXBvbGxvU2VydmVyKHtcclxuICAgIGdhdGV3YXksXHJcbiAgICBlbmdpbmU6IGZhbHNlLFxyXG4gICAgcGxheWdyb3VuZDogdHJ1ZSxcclxuICAgIHN1YnNjcmlwdGlvbnM6IGZhbHNlLFxyXG59KTtcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuYXBvbGxvLmFwcGx5TWlkZGxld2FyZSh7IGFwcCB9KTtcclxuXHJcbmxldCBzZXJ2ZXIgPSAoaHR0cHMuY3JlYXRlU2VydmVyKFxyXG4gICAge1xyXG4gICAgICAgIGtleTogZnMucmVhZEZpbGVTeW5jKGAuL2xvY2FsaG9zdC5rZXlgKSxcclxuICAgICAgICBjZXJ0OiBmcy5yZWFkRmlsZVN5bmMoYC4vbG9jYWxob3N0LmNydGApLFxyXG4gICAgfSxcclxuICAgIGFwcFxyXG4pKTtcclxuXHJcbnNlcnZlci5saXN0ZW4oeyBwb3J0OiBjb25maWcucG9ydCB9LCAoKSA9PlxyXG4gICAgY29uc29sZS5sb2coXHJcbiAgICAgICAgXCLwn5qAIFNlcnZlciByZWFkeSBhdFwiLFxyXG4gICAgICAgIGBodHRwJHtjb25maWcuc3NsID8gXCJzXCIgOiBcIlwifTovLyR7Y29uZmlnLmhvc3RuYW1lfToke2NvbmZpZy5wb3J0fSR7XHJcbiAgICAgICAgICAgIGFwb2xsby5ncmFwaHFsUGF0aFxyXG4gICAgICAgIH1gXHJcbiAgICApXHJcbik7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gateway.js"
      ],
      "names": [
        "ApolloGateway",
        "require",
        "ApolloServer",
        "express",
        "dotenv",
        "fs",
        "https",
        "config",
        "uri",
        "process",
        "env",
        "URI",
        "ssl",
        "port",
        "hostname",
        "gateway",
        "serviceList",
        "name",
        "url",
        "__exposeQueryPlanExperimental",
        "apollo",
        "engine",
        "playground",
        "subscriptions",
        "app",
        "applyMiddleware",
        "server",
        "createServer",
        "key",
        "readFileSync",
        "cert",
        "listen",
        "console",
        "log",
        "graphqlPath"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAoBC,OAAO,CAAC,iBAAD,CAAjC;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAmBD,OAAO,CAAC,uBAAD,CAAhC;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMI,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMK,KAAK,GAAGL,OAAO,CAAC,OAAD,CAArB;;AAEAG,MAAM,CAACG,MAAP;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,GAAxB;AAEA,MAAMJ,MAAM,GAAG;AAAEK,EAAAA,GAAG,EAAE,IAAP;AAAaC,EAAAA,IAAI,EAAE,IAAnB;AAAyBC,EAAAA,QAAQ,EAAE;AAAnC,CAAf;AAEA,MAAMC,OAAO,GAAG,IAAIf,aAAJ,CAAkB;AAC9BgB,EAAAA,WAAW,EAAE,CACT;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAG;AAAvB,GADS,CADiB;AAG3B;AACHC,EAAAA,6BAA6B,EAAE;AAJD,CAAlB,CAAhB;AAQA,MAAMC,MAAM,GAAG,IAAIlB,YAAJ,CAAiB;AAC5Ba,EAAAA,OAD4B;AAE5BM,EAAAA,MAAM,EAAE,KAFoB;AAG5BC,EAAAA,UAAU,EAAE,IAHgB;AAI5BC,EAAAA,aAAa,EAAE;AAJa,CAAjB,CAAf;AAOA,MAAMC,GAAG,GAAGrB,OAAO,EAAnB;AACAiB,MAAM,CAACK,eAAP,CAAuB;AAAED,EAAAA;AAAF,CAAvB;AAEA,IAAIE,MAAM,GAAIpB,KAAK,CAACqB,YAAN,CACV;AACIC,EAAAA,GAAG,EAAEvB,EAAE,CAACwB,YAAH,CAAiB,iBAAjB,CADT;AAEIC,EAAAA,IAAI,EAAEzB,EAAE,CAACwB,YAAH,CAAiB,iBAAjB;AAFV,CADU,EAKVL,GALU,CAAd;AAQAE,MAAM,CAACK,MAAP,CAAc;AAAElB,EAAAA,IAAI,EAAEN,MAAM,CAACM;AAAf,CAAd,EAAqC,MACjCmB,OAAO,CAACC,GAAR,CACI,oBADJ,EAEK,OAAM1B,MAAM,CAACK,GAAP,GAAa,GAAb,GAAmB,EAAG,MAAKL,MAAM,CAACO,QAAS,IAAGP,MAAM,CAACM,IAAK,GAC7DO,MAAM,CAACc,WACV,EAJL,CADJ",
      "sourceRoot": "C:\\Users\\57315\\OneDrive\\Documentos\\GitHub\\Nueva_Api\\NewApi\\src\\",
      "sourcesContent": [
        "const { ApolloGateway } = require('@apollo/gateway');\r\nconst { ApolloServer } = require('apollo-server-express');\r\nconst express = require('express') ;\r\nconst dotenv = require('dotenv');\r\nconst fs = require('fs');\r\nconst https = require('https');\r\n\r\ndotenv.config();\r\n\r\nconst uri = process.env.URI;\r\n\r\nconst config = { ssl: true, port: 5000, hostname: \"localhost\" };\r\n\r\nconst gateway = new ApolloGateway({\r\n    serviceList: [\r\n        { name: \"exams\", url: `http://localhost:3000` },\r\n    ], //Aqui se agregan los microcervicios con puertos diferentes 5001, 5002, 5003... y se crea su respectiva carpeta en services\r\n    __exposeQueryPlanExperimental: true,\r\n});\r\n\r\n\r\nconst apollo = new ApolloServer({\r\n    gateway,\r\n    engine: false,\r\n    playground: true,\r\n    subscriptions: false,\r\n});\r\n\r\nconst app = express();\r\napollo.applyMiddleware({ app });\r\n\r\nlet server = (https.createServer(\r\n    {\r\n        key: fs.readFileSync(`./localhost.key`),\r\n        cert: fs.readFileSync(`./localhost.crt`),\r\n    },\r\n    app\r\n));\r\n\r\nserver.listen({ port: config.port }, () =>\r\n    console.log(\r\n        \"ðŸš€ Server ready at\",\r\n        `http${config.ssl ? \"s\" : \"\"}://${config.hostname}:${config.port}${\r\n            apollo.graphqlPath\r\n        }`\r\n    )\r\n);\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1604890022942
  }
}