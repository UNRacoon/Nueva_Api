{"version":3,"sources":["../../../src/services/Vocabulary/resolvers.js"],"names":["axios","require","dotenv","config","urlC","urlW","resolvers","Query","allCategories","_","get","then","res","data","catch","console","log","categoryByName","body","categoryByLevel","allWords","wordsByCategory","wordsByName","Mutation","createCategory","post","updateCategory","put","deleteCategory","createWord","updateWord","deleteWord","module","exports"],"mappings":"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","sourcesContent":["const axios = require('axios');\r\nconst dotenv = require ('dotenv') ;\r\n\r\ndotenv.config();\r\n\r\nconst urlC = `http://localhost:3001/category`;\r\nconst urlW = `http://localhost:3001/words`;\r\n\r\nconst resolvers = {\r\n    Query: {\r\n        allCategories: async (_) => {\r\n            return axios\r\n                .get(`${urlC}/AllCategories`)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        categoryByName: async (_, { body }) => {\r\n            return axios\r\n                .get(`${urlC}/category`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        categoryByLevel: async (_, { body }) => {\r\n            return axios\r\n                .get(`${urlC}/levelCategory`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        allWords: async (_) => {\r\n            return axios\r\n                .get(`${urlW}/AllWords`)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        wordsByCategory: async (_, { body }) => {\r\n            return axios\r\n                .get(`${urlW}/categoryWord`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        wordsByName: async (_, { body }) => {\r\n            return axios\r\n                .get(`${urlW}/word`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n    },\r\n    Mutation: {\r\n        createCategory: async (_, { body }) => {\r\n            return axios\r\n                .post(`${urlC}/newCategory/`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        updateCategory: async (_, { body }) => {\r\n            return axios\r\n                .put(`${urlC}/updateCategory`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        deleteCategory: async (_, { body }) => {\r\n            return axios\r\n                .put(`${urlC}/deleteCategory`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        createWord: async (_, { body }) => {\r\n            return axios\r\n                .post(`${urlW}/newWord`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        updateWord: async (_, { body }) => {\r\n            return axios\r\n                .post(`${urlW}/updateWord/`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        deleteWord: async (_, { body }) => {\r\n            return axios\r\n                .post(`${urlW}/deleteWord/`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n    },\r\n};\r\n\r\nmodule.exports =  resolvers;\r\n"],"file":"resolvers.js"}