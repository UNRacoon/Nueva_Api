{"version":3,"sources":["../../../src/services/Vocabulary/resolvers.js"],"names":["axios","require","dotenv","config","urlC","urlW","resolvers","Query","allCategories","_","get","then","res","data","catch","console","log","categoryByName","name","categoryByLevel","level","allWords","wordsByCategory","category","wordsByName","Mutation","createCategory","body","post","updateCategory","put","deleteCategory","createWord","updateWord","deleteWord","delete","module","exports"],"mappings":"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","sourcesContent":["const axios = require('axios');\r\nconst dotenv = require ('dotenv') ;\r\n\r\ndotenv.config();\r\n\r\nconst urlC = `http://localhost:3001/category`;\r\nconst urlW = `http://localhost:3001/words`;\r\n\r\nconst resolvers = {\r\n    Query: {\r\n        allCategories: async (_) => {\r\n            return axios\r\n                .get(`${urlC}/AllCategories`)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        categoryByName: async (_, { name }) => {\r\n            return axios\r\n                .get(`${urlC}/category/${name}`)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        categoryByLevel: async (_, { level }) => {\r\n            return axios\r\n                .get(`${urlC}/levelCategory/${level}`)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        allWords: async (_) => {\r\n            return axios\r\n                .get(`${urlW}/AllWords`)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        wordsByCategory: async (_, { category }) => {\r\n            return axios\r\n                .get(`${urlW}/categoryWord/${category}`)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        wordsByName: async (_, { name }) => {\r\n            return axios\r\n                .get(`${urlW}/word/${name}`)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n    },\r\n    Mutation: {\r\n        createCategory: async (_, { body }) => {\r\n            return axios\r\n                .post(`${urlC}/newCategory/`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        updateCategory: async (_, { body }) => {\r\n            return axios\r\n                .put(`${urlC}/updateCategory`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        deleteCategory: async (_, { body }) => {\r\n            return axios\r\n                .put(`${urlC}/deleteCategory`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        createWord: async (_, { body }) => {\r\n            return axios\r\n                .post(`${urlW}/newWord`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        updateWord: async (_, { body }) => {\r\n            return axios\r\n                .put(`${urlW}/updateWord/`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n        deleteWord: async (_, { body }) => {\r\n            return axios\r\n                .delete(`${urlW}/deleteWord/`, body)\r\n                .then((res) => {\r\n                    return res.data;\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"F\");\r\n                });\r\n        },\r\n    },\r\n};\r\n\r\nmodule.exports =  resolvers;\r\n"],"file":"resolvers.js"}