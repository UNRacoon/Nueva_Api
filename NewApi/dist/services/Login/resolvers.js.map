{"version":3,"sources":["../../../src/services/Login/resolvers.js"],"names":["axios","require","dotenv","config","urlLogsign","URLLogsign","resolvers","Query","validateToken","_","headers","get","params","client","uid","token","then","response","user","data","catch","error","id","email","name","nickname","image","type","Mutation","logInUser_1","session","post","console","log","errors","registerUser","res","logInUser","answer","result","module","exports"],"mappings":"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","sourcesContent":["const axios = require('axios');\r\nconst dotenv = require ('dotenv') ;\r\n\r\ndotenv.config();\r\nconst  urlLogsign = `localhost`;\r\nconst URLLogsign = `http://${urlLogsign}:${5001}`;\r\n\r\nconst resolvers = {\r\n    Query: {\r\n        validateToken: async (_, { headers }) => {\r\n            return axios\r\n\t\t\t\t.get(`${URLLogsign}/auth/validate_token`, {params:{\r\n\t\t\t\t\t'client': headers.client,\r\n\t\t\t\t\t'uid': headers.uid,\r\n\t\t\t\t\t'access-token': headers.token\r\n\t\t\t\t}}, true).then((response) => {\r\n\t\t\t\t\tlet user = response.data.data\r\n\t\t\t\t\tuser['token'] = response.headers['access-token']\r\n\t\t\t\t\tuser['type'] = response.headers['token-type']\r\n\t\t\t\t\tuser['client'] = response.headers.client\r\n\t\t\t\t\tdelete user['provider']\r\n\t\t\t\t\tdelete user['uid']\r\n\t\t\t\t\tdelete user['allow_password_change']\r\n\t\t\t\t\treturn user\r\n\t\t\t\t}).catch ((error) => {\r\n                    let user ={\r\n                        id: -1,\r\n                        email: \"\",\r\n                        name: \"\",\r\n                        nickname: \"\",\r\n                        image: \"\",\r\n                        token: \"\",\r\n                        type: \"\",\r\n                        client:\"\",\r\n                        uid: \"\",\r\n                        error : \"Invalid Token\"\r\n                    }\r\n                    return user;\r\n                })\r\n\t\t},       \r\n    },\r\n    Mutation: {\r\n        logInUser_1: (_, { session }) => {\r\n            return axios\r\n\t\t\t\t.post(`${URLLogsign}/auth/sign_in`, session).then(\r\n\t\t\t\t\t(response) => {\r\n\t\t\t\t\t    console.log(response);\r\n\t\t\t\t\t\tlet user = response.data.data\r\n\t\t\t\t\t\tuser['token'] = response.headers['access-token']\r\n\t\t\t\t\t\tuser['uid'] = response.headers.uid\r\n\t\t\t\t\t\tuser['type'] = response.headers['token-type']\r\n\t\t\t\t\t\tuser['client'] = response.headers.client\r\n\t\t\t\t\t\treturn  user;\r\n\t\t\t\t\t}\r\n\t\t\t\t).catch ((error) => {\r\n                    console.log(error.response.data.errors);\r\n                    let user ={\r\n                        id: -1,\r\n                        email: \"\",\r\n                        name: \"\",\r\n                        nickname: \"\",\r\n                        image: \"\",\r\n                        token: \"\",\r\n                        type: \"\",\r\n                        client:\"\",\r\n                        uid: \"\",\r\n                        error : error.response.data.errors[0]\r\n                    }\r\n                    return user;\r\n                })\r\n\t\t},\r\n        registerUser: (_, { user }) => {\r\n            return axios\r\n\t\t\t\t.post(`${URLLogsign}/auth/`, user).then(\r\n\t\t\t\t\t(res) => {\r\n\t\t\t\t\t\t//console.log(\"Server response => \", res);\r\n\t\t\t\t\t\tlet user = res.data.data;\r\n\t\t\t\t\t\tuser['token'] = res.headers['access-token']\r\n\t\t\t\t\t\tuser['uid'] = res.headers.uid\r\n\t\t\t\t\t\tuser['type'] = res.headers['token-type']\r\n\t\t\t\t\t\tuser['client'] = res.headers.client\r\n\t\t\t\t\t\treturn user;\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t},\r\n        logInUser:async (_, { session }) => {\r\n            return axios\r\n                .post(`${URLLogsign}/ldap`, session)\r\n                .then(\r\n                    (response) => {\r\n                        console.log(response.data);\r\n                        if (response.data.answer == \"false\"){\r\n                            console.log(\"el if del false\");\r\n                            let user ={\r\n                                id: -1,\r\n                                email: \"\",\r\n                                name: \"\",\r\n                                nickname: \"\",\r\n                                image: \"\",\r\n                                token: \"\",\r\n                                type: \"\",\r\n                                client:\"\",\r\n                                uid: \"\",\r\n                                error : \"error en validacion de credenciales\"\r\n                            }\r\n                            return user\r\n                        }else{\r\n                            console.log(\"validacion eldab\");\r\n                            return 1\r\n                        }\r\n                    }\r\n                ).then((result)=>{\r\n                //console.log(\"validacion then\");\r\n                console.log(result);\r\n                if (result != 1){\r\n                    //resolve(result)\r\n                    return result\r\n                }else{ console.log(\"sending else\");\r\n                console.log(\"Session: \");\r\n                console.log(session);\r\n                return axios\r\n                    .post(`${URLLogsign}/auth/sign_in`, session).then(\r\n                                (response) => {\r\n                                    console.log(response.data);\r\n                                    let user = response.data.data\r\n                                    user['token'] = response.headers['access-token']\r\n                                    user['uid'] = response.headers.uid\r\n                                    user['type'] = response.headers['token-type']\r\n                                    user['client'] = response.headers.client\r\n                                    return  user;\r\n                                }\r\n                            ).catch ((error) => {\r\n                                let user ={\r\n                                    id: -1,\r\n                                    email: \"\",\r\n                                    name: \"\",\r\n                                    nickname: \"\",\r\n                                    image: \"\",\r\n                                    token: \"\",\r\n                                    type: \"\",\r\n                                    client:\"\",\r\n                                    uid: \"\",\r\n                                    error : \"error en validacion de credenciales\"\r\n                                }\r\n                                return user;\r\n                            })\r\n                }\r\n\r\n            })\r\n        },\r\n\r\n    },\r\n};\r\n\r\nmodule.exports =  resolvers;\r\n"],"file":"resolvers.js"}