{"version":3,"sources":["../../../src/services/Level/index.js"],"names":["ApolloServer","require","buildFederatedSchema","typeDefs","resolvers","server","schema","listen","port","then","url","console","log"],"mappings":";;AAAA,IAAM;AAAEA,EAAAA;AAAF,IAAmBC,OAAO,CAAC,eAAD,CAAhC;;AACA,IAAM;AAAEC,EAAAA;AAAF,IAA2BD,OAAO,CAAC,oBAAD,CAAxC;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAE,YAAF,CAAxB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAE,aAAF,CAAzB;;AAEA,IAAMI,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC5BM,EAAAA,MAAM,EAAEJ,oBAAoB,CAAC,CACzB;AACIC,IAAAA,QADJ;AAEIC,IAAAA;AAFJ,GADyB,CAAD;AADA,CAAjB,CAAf;AASAC,MAAM,CAACE,MAAP,CAAc;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAd,EAA8BC,IAA9B,CAAmC,UAAa;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AAC5CC,EAAAA,OAAO,CAACC,GAAR,wCAAkCF,GAAlC;AACH,CAFD","sourcesContent":["const { ApolloServer } = require('apollo-server');\r\nconst { buildFederatedSchema } = require('@apollo/federation');\r\nconst typeDefs = require ('./typeDefs');\r\nconst resolvers = require ('./resolvers');\r\n\r\nconst server = new ApolloServer({\r\n    schema: buildFederatedSchema([\r\n        {\r\n            typeDefs,\r\n            resolvers,\r\n        },\r\n    ]),\r\n});\r\n\r\nserver.listen({ port: 2003 }).then(({ url }) => {\r\n    console.log(`ğŸš€ Server ready at ${url}`);\r\n});"],"file":"index.js"}