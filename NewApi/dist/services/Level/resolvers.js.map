{"version":3,"sources":["../../../src/services/Level/resolvers.js"],"names":["axios","require","dotenv","config","urlclass","urlprog","resolvers","Query","allClassification","_","get","then","res","data","catch","console","log","classificationById","id","allProgress","progressById","Mutation","createClassification","classification","post","updateClassification","put","deleteClassification","delete","createProgress","progress","updateProgress","deleteProgress","module","exports"],"mappings":"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","sourcesContent":["const axios = require('axios');\r\nconst dotenv = require ('dotenv') ;\r\n\r\ndotenv.config();\r\n\r\n//const url = process.env.URI_UN;\r\nconst urlclass = `http://localhost:9000/classification`;\r\nconst urlprog = `http://localhost:9000/progress`;\r\n\r\nconst resolvers = {\r\n\tQuery: {\r\n\t\tallClassification: async (_) =>{\r\n            return axios\r\n            .get(`${urlclass}/allClassification`)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch(() => {\r\n                console.log(\"F\");\r\n            });\r\n        },\r\n        classificationById: async (_, { id }) =>{\r\n            return axios \r\n            .get(`${urlclass}/${id}`)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch(() => {\r\n                console.log(\"F\");\r\n            });\r\n        },\r\n        allProgress: async (_) =>{\r\n            return axios \r\n            .get(`${urlprog}/allProgress`)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch(() => {\r\n                console.log(\"F\");\r\n            });\r\n        },    \r\n\t\tprogressById: async (_, { id }) =>{\r\n            return axios\r\n            .get(`${urlprog}/${id}`)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch(() => {\r\n                console.log(\"F\");\r\n            });\r\n        },\r\n    },\r\n\r\n\tMutation: {\r\n\t\tcreateClassification: async (_, { classification }) =>{\r\n            return axios\r\n            .post(`${urlclass}/`, classification)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch(() => {\r\n                console.log(\"F\");\r\n            });\r\n        },\r\n\t\tupdateClassification: async(_, { id, classification }) =>{\r\n            return axios\r\n            .put(`${urlclass}/${id}`, classification)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch(() => {\r\n                console.log(\"F\");\r\n            });\r\n        },\r\n\t\tdeleteClassification: async(_, { id }) =>{\r\n            return axios\r\n            .delete(`${urlclass}/${id}`)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch(() => {\r\n                console.log(\"F\");\r\n            });\r\n        },\r\n        createProgress: async (_, { progress }) =>{\r\n            return axios\r\n            .post(`${urlprog}/`, progress)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch(() => {\r\n                console.log(\"F\");\r\n            });\r\n        },\r\n\t\tupdateProgress: async (_, { id, progress }) =>{\r\n            return axios\r\n            .put(`${urlprog}/${id}`, progress)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch(() => {\r\n                console.log(\"F\");\r\n            });\r\n        },\r\n\t\tdeleteProgress: async (_, { id }) =>{\r\n            return axios\r\n            .delete(`${urlprog}/${id}`)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch(() => {\r\n                console.log(\"F\");\r\n            });\r\n        },\r\n    },\r\n};\r\nmodule.exports =  resolvers;\r\n"],"file":"resolvers.js"}